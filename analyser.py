import re


class TextAnalyser:

    def __find_reports(self, text):
        patterns = [r"\bگزارش (\w+ \w+)\b"]
        reports = []
        for pattern in patterns:
            for matched in re.finditer(pattern, text):
                if matched is not None:
                    reports.append({
                        'type': 'گزارش',
                        'marker': matched.group(1),
                        'span': [x + 1 for x in matched.span()]
                    })

        return reports

    def __find_events(self, text):
        # a = ["ضرر", "سود", "اطلاعیه", "حقیق", "حقوق", "افزایش", "سرمایه", "تقسیم", "سود", "دامنه", "نوسان", "شدید", "سهم", "رانت"]

        patterns = [r"\b((افشا|افشای) (الف|ب))\b",  # افشای الف
                    r"\b(((\S+) ){1,2}(تومان|تومن|درصد|واحد|ریال) ((\S+) ){0,2}(مثبت|منفی|رشد|سود|افزایش|کاهش))\b",
                    # پنجاه درصد رشد
                    r"\b((مثبت|منفی|رشد|سود|افزایش|کاهش) ((\S+) ){0,5}(درصدی|واحدی|درصد|واحد))\b",
                    # رشد 3 درصدی
                    r"\b((حقیقی|حقوقی|حقیقی ها|حقوقی ها) ((\S+) ){0,3}(ورود|وارد|خروج|خارج|تزریق) (\S+))\b",
                    # حقیقی ها به بازار پول تزریق کردند
                    r"\b((ورود|وارد|خروج|خارج|تزریق) ((\w+) ){0,2}(حقیقی|حقوقی))\b",  # ورود پول حقیقی
                    r"\b((به|از) ((\S+) ){0,7}(عبور|رسید))\b",
                    r"\b((واگذاری) ((\S+) ){0,3}(سهام|سهم))\b",  # واگذاری 5 درصد از سهام
                    r"\b((اصلاح|اطلاعیه|افزایش سرمایه|تقسیم سود|دامنه نوسان|نوسان شدید|سهم رانتی|سبزپوش))\b",
                    r"((روند مثبت|محدوده رشد|برگشت|صف خرید|صف فروش|نوسان|ریزش|صعود|نزول|روند صعودی|روند نزولی|کف سازی|تثبیت))"
                    ]
        events = []

        for pattern in patterns:
            for matched in re.finditer(pattern, text):
                if matched is not None:
                    events.append({
                        'type': 'واقعه',
                        'marker': str(matched.group(1)),
                        'span': [x + 1 for x in matched.span()]
                    })
        return events

    def __find_symbols(self, text):
        def find_name(text):
            for name in symbols_data['name']:
                mached = re.findall(name, text)
                if len(mached) != 0:
                    for name_symbol in mached:
                        symbols.append({
                            'type': 'نماد',
                            'marker': name_symbol,
                            'span': ''
                        })

        def find_title(text):
            for title in symbols_data['title']:
                mached = re.search(title, text)
                if mached is not None:
                    symbols.append({
                        'type': 'شرکت',
                        'marker': mached,
                        'span': ''
                    })

        symbols = []
        symbols_data = {
            'name': {'وتجارت', 'وپارس','فملی', 'وبصادر','کترام', 'فاذر', 'شراز', 'چکاپا', 'آپ', 'لابسا', 'کاما', 'پکویر', 'ثبهساز', 'کلر', 'پترول',
                     'ورنا', 'لکما', 'بترانس', 'کسرا', 'خفنر', 'ذوب', 'خدیزل', 'شستا', 'شاراک', 'فولاد', 'شپترو',
                     'وشهر',
                     'قاسم', 'پالایش', 'خساپا', 'پاسا', 'فسبزوار', 'وبرق', 'غزر', 'سفار', 'نوری', 'زگلدشت', 'ولساپا',
                     'وغدیر', 'سپید', 'وآیند', 'بکاب', 'وسالت', 'کیسون', 'تپکو', 'بجهرم', 'فروی', 'ختراک', 'همراه',
                     'غبشهر',
                     'غنوش', 'کیمیاتک', 'فلوله', 'تفارس-پذیره', 'آرام', 'خفولا', 'بالاس', 'غدشت', 'ثشاهد', 'شاخص بورس',
                     'کتوکا', 'کفپارس', 'زماهان', 'شفن', 'دی ', 'خپارس', 'غصینو', 'مادیرا', 'زاگرس', 'قچار', 'کرمان',
                     'بورس',
                     'شکلر', 'شپلی', 'خکرمان', 'کدما', 'طلا', 'خنصیر', 'وهامونح', 'شلرد', 'برکت', 'کمند', 'وسین',
                     'سجام',
                     'مفاخر', 'شوینده', 'خکار', 'شیشه01ن', 'افق', 'شپدیس', 'خاور', 'تمحرکه', 'کالا', 'صبا', 'سیمرغ',
                     'سمگا',
                     'زگلدشتح', 'خکمک', 'فزرین', 'فنفت', 'رتاپ', 'دارا یکم', 'خگستر', 'وآذر', 'ساذری', 'خودکفا',
                     'غالبر',
                     'بزاگرس', 'غشهداب', 'وساپا', 'قنیشا', 'کگاز', 'فولای', 'وپست', 'خودرو', 'شگویا', 'خلنت', 'ثاخت',
                     'شپنا', 'شتران', 'غگرجی', 'وبملت', 'سیتا', 'گشان', 'وگردش', 'وسدید'},
            'title': {'ایران‌ خودرو', 'کویر تایر', 'گروه سرمایه گذاری میراث فرهنگی', 'پارس فولاد سبزوار',
                      'توسعه وعمران استان کرمان', 'قاسم ایران', 'شرکت ارتباطات سیار ایران',
                      'لوله‌وماشین‌سازی‌ایران‌', 'پتروشیمی زاگرس', 'مجتمع تولید گوشت مرغ ماهان',
                      'پتروشیمی پردیس', 'بورس اوراق بهادار تهران', 'بانک قرض الحسنه رسالت',
                      'سرمایه‌گذاری‌ رنا', 'صنعتی‌ بهشهر', 'آریان کیمیا تک',
                      'سرمایه‌گذاری‌توسعه‌آذربایجان‌', 'سرامیک‌های‌صنعتی‌اردکان‌',
                      'سرمایه‌گذاری‌ غدیر', 'توسعه مولد نیروگاهی جهرم', 'بانک آینده',
                      'خدمات فنی فولاد یزد', 'کارکنان صنعت برق زنجان وقزوی', 'بانک ملت',
                      'فروشگاههای زنجیره ای افق کوروش',
                      'سرمایه گذاری تامین اجتماعی', 'کشت و دام گلدشت نمونه اصفهان', 'کود شیمیایی اوره لردگان',
                      'بانک گردشگری', 'ایران‌یاساتایرورابر', 'لیزینگ رایان‌ سایپا', 'آبسال‌',
                      'سرمایه گذاری سیمان تامین', 'ماشین سازی نیرو محرکه', 'پارس‌ خودرو', 'گواهی سپرده کالایی شیشه',
                      'مدیریت صنعت شوینده ت.ص.بهشهر', 'پالایش نفت شیراز', 'تجارت الکترونیک پارسیان',
                      'مهندسی‌نصیرماشین‌', 'صندوق س. با درآمد ثابت کمند', 'دشت‌ مرغاب‌',
                      'مهندسی ساختمان تاسیسات راه آهن', 'شرکت کیسون', 'گروه‌صنعتی‌سدید',
                      'گسترش‌ سرمایه‌گذاری‌ایران‌خودرو', 'صندوق پالایشی یکم-سهام', 'شاخص بورس',
                      'ایران خودرو دیزل', 'پالایش نفت اصفهان', 'فراوردههای غذایی وقند چهارمحال', 'صنایع‌ آذرآب‌',
                      'آذریت‌', 'فنرسازی‌خاور', 'پلی اکریل ایران', 'بین‌المللی‌توسعه‌ساختمان',
                      'شیشه‌ و گاز', 'صنایع فولاد آلیاژی یزد', 'معدنی‌ دماوند', 'آسان پرداخت پرشین',
                      'کمک‌فنرایندامین‌', 'سرمایه گذاری صبا تامین', 'تولیدتجهیزات‌سنگین‌هپکو',
                      'سپید ماکیان', 'صنایع تجهیزات نفت', 'صنعتی مینو', 'پتروشیمی نوری', 'صندوق س.پشتوانه طلای لوتوس',
                      'بهساز کاشانه تهران', 'ذوب روی اصفهان', 'کلر پارس', 'اقتصادی و خودکفایی آزادگان',
                      'پتروشیمی آبادان',
                      'صنعتی زر ماکارون', 'لنت‌ ترمزایران‌', 'بیمه دی', 'بورس کالای ایران',
                      'تولیدی و خدمات صنایع نسوز توکا', 'پتروشیمی خلیج فارس',
                      'ریخته‌گری‌ تراکتورسازی‌ ایران‌', 'سایپا', 'زرین معدن آسیا',
                      'سیمان‌فارس‌', 'سیمرغ', 'سرمایه گذاری هامون صبا', 'باما', 'پالایش نفت تهران',
                      'فولاد مبارکه اصفهان', 'لبنیات‌کالبر', 'صنایع مادیران', 'توسعه بین المللی پدیده شاندیز',
                      'نوش‌مازندران‌', 'توسعه فناوری اطلاعات خوارزمی', 'ذوب آهن اصفهان',
                      'کشت و صنعت شهداب ناب خراسان', 'پتروشیمی شازند', 'سرمایه‌گذاری‌ سایپا',
                      'تامین سرمایه خلیج فارس-پذیره', 'کارخانجات‌مخابراتی‌ایران‌', 'مجتمع سیمان غرب آسیا',
                      'پتروشیمی تندگویان', 'فرآورده‌های‌ نسوز پارس‌', 'گروه اقتصادی کرمان خودرو', 'بانک شهر',
                      'صندوق واسطه گری مالی یکم', 'بیسکویت‌ گرجی‌', 'تولیدی‌ کاشی‌ تکسرام‌',
                      'بانک دی', 'پتروشیمی فناوران', 'بهمن دیزل', 'بیمه سینا', 'گروه صنایع کاغذ پارس', 'نیروکلر',
                      'قند نیشابور', 'گروه دارویی برکت', 'پست بانک ایران', 'صنایع‌جوشکاب‌یزد',
                      'سرمایه‌ گذاری‌ شاهد', 'صندوق س شاخصی آرام مفید', 'ایرکا پارت صنعت', 'ایران‌ ترانسفو',
                      'نیروگاه زاگرس کوثر'}
        }
        find_name(text)
        find_title(text)
        return symbols

    def run(self, input:str = None):
        if input is None:
            with open('input_example', encoding="utf8") as f:
                texts = f.readlines()
        else:
            texts = []
            texts.append(input)

        for text in texts:
            text = text.replace("\u200C", " ")
            symbols = self.__find_symbols(text)
            events = self.__find_events(text)
            reports = self.__find_reports(text)





            #todo: for test
            if len(events) != 0:
                pass
            pass
            result = []
            for item in symbols:
                result.append(item)
            for item in events:
                result.append(item)
            for item in reports:
                result.append(item)
            print(result)
            print("="*100)



if __name__ == '__main__':
    TextAnalyser().run()
